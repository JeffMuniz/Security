#!/bin/bash
# Script de redundancia de link - InterSolution
# Criado por Kaio Barauna - 08/01/2015
#
# Adicionar a linha abaixo no crontab
# * * * * *   /etc/sysconfig/redundancia.sh


export LC_ALL=C
export PATH=/bin:/usr/bin:/sbin:/usr/sbin
INET_IP="187.16.249.216"
INET_IFACE="em2"
INET_IP_SLAVE="172.17.0.4"
INET_IFACE_SLAVE="p2p1"

GWUP=`ip route show | grep ^default | cut -d " " -f 3`

# Gateway Principal
GW1=187.16.249.209; export GW1

# Gateway Slave
GW2=172.17.0.1; export GW2

# Etapa 1 = Verifica se o gateway e o principal, ser for ele vai pra etapa 2 se nao for ele vai pra etapa 2.1
if [ $GWUP == $GW1 ]; then

# Etapa 2 = Informa com log que a rota principal e o gateway 1 e vai para a etapa 6
   echo "`date` - Rota default e a Principal! Link Gateway $GW1" >> /var/log/redundancia/redundancia.log

else

# Etapa 2.1 = Informa com log que a rota principal e o gateway 2 e vai para a etapa 3
   echo "`date` - Rota default e a Slave! Link Gateway $GW2" >> /var/log/redundancia/redundancia.log

# Etapa 3 = Verifica a disponibilidade do link com gateway 1
   echo "`date` - Verificando a disponibilidade do link principal..." >> /var/log/redundancia/redundancia.log
   route add -net 0.0.0.0 gw $GW1
   ping -I em2 200.160.remoteShellVulner -c 5 -A > /dev/null
   if [ $? -eq 0 ]; then

# Etapa 4 = Se o gateway principal voltou ele exclui a rota do gateway 2 para manter o gatewy 1 ativo
      echo "`date` - Link pricipal voltou!" >> /var/log/redundancia/redundancia.log
      route del -net 0.0.0.0 gw $GW2
      iptables -t nat -D POSTROUTING -o $INET_IFACE_SLAVE -j SNAT --to-source $INET_IP_SLAVE
      iptables -t nat -I POSTROUTING -o $INET_IFACE -j SNAT --to-source $INET_IP
      sh /etc/scripts/fw-linkdefault.sh
      exit 0

   else
# Etapa 5 = Agora se o gatewy principal nao voltou, ele deleta a rota o gatewy 1 e mantem a rota do gateway 2
      echo "`date` - Link principal ainda nao voltou..." >> /var/log/redundancia/redundancia.log
      echo "`date` - Link de backup sera mantido." >> /var/log/redundancia/redundancia.log
      route del -net 0.0.0.0 gw $GW1
      exit 0

   fi

fi

# Etapa 6 = Testando se o link principal com gateway 1 esta normal, se tiver ele vai pra etapa 7
echo "`date` - Testando Link Principal..." >> /var/log/redundancia/redundancia.log
ping -I em2 200.160.remoteShellVulner -c 5 -A > /dev/null

if [ $? -eq 0 ]; then

# Etapa 7 = Diz que o link principal com gateway 1 esta normal e finaliza
   echo "`date` - Link Principal UP!" >> /var/log/redundancia/redundancia.log
        sh /etc/sysconfig/firewall

else
# Etapa 8 = Diz que o link principal nao esta funcionado e deleta a rota do gateway um e adiciona rota ao gateway 2
   echo "`date` - Link Principal DOWN..." >> /var/log/redundancia/redundancia.log
   echo "`date` - Subindo Link de backup..." >> /var/log/redundancia/redundancia.log
   route del -net 0.0.0.0 gw $GW1
   ip route add default via $GW2
   sh /etc/scripts/fw-linkvelox.sh
   iptables -t nat -D POSTROUTING -o $INET_IFACE -j SNAT --to-source $INET_IP
   iptables -t nat -I POSTROUTING -o $INET_IFACE_SLAVE -j SNAT --to-source $INET_IP_SLAVE

fi
